"Puedes tomar un barco y viajar tan lejos como quieras, pero tu alma nunca dejara su lugar de origen."
-Simbad, el marino-

Crear una carpeta en Linux para usarla en Visual Studio Code con WSL
1. Abre la terminal de Linux (WSL).
2. Navega a la ubicación donde deseas crear la carpeta.
crear la carpeta dentro del ambiente Ubunto que se instalo con el wsl: Linux/Ubuntu/home/NombreUsuario/AquiCrearCarpetadelProyecto
Puedes usar el comando cd para navegar a la ubicación deseada. Por ejemplo, si deseas crear la carpeta en tu directorio de inicio, puedes usar el siguiente comando:
cd ~
3. Crea la carpeta usando el comando mkdir.
Por ejemplo, para crear una carpeta llamada "mi_proyecto", puedes usar el siguiente comando:
mkdir mi_proyecto
4. Abre Visual Studio Code.
5. Abre la carpeta que acabas de crear en Visual Studio Code.
Puedes hacerlo de dos maneras:
Usando el menú "Archivo".
Haz clic en "Archivo" > "Abrir carpeta" y selecciona la carpeta "mi_proyecto".
Usando el comando "code".
En la terminal de Linux, escribe el siguiente comando:
code mi_proyecto
6. ¡Ya está!
Ahora puedes trabajar en tu proyecto en Visual Studio Code utilizando la terminal de Linux.

**Preparacion del Proyecto**
nos ubicamos en la carpeta del proyecto con la terminal: cd ERP3
Creamos el entorno virtual de esta manera:
a. instalamos el entorno virtual: python -m pip install venv
b. Creación del entorno virtual: python -m venv venv
c. Activación del entorno virtual: source venv/bin/activate
Instalar Django: pip install django.
revisar version de Django: django-admin --version en este caso:5.0.2

**Creacion del ambiente de Django**
creamos la carpeta del proyecto con: django-admin startproject ERP .  (con el punto)
ejecutamos el archivo manage.py para comprobar el django: python manage.py runserver
(nota saldra texto en color rojo, no es un error solo ignorarlo)
abrimos el link, en este caso: http://127.00.1/8000/
Deberia salir este mesaje en la pagina web: The install worked successfully! Congratulations!
ctrl + C para salir de la generacion del link y volvemos a activar el en version: source venv/bin/activate

**Creacion de la aplicacion**
ejecutamos: python manage.py startapp task (se crea la carpeta task)
entramos en la carpeta ERP y de ahi al archivo settings.py
en el archivo settings.py buscamos la funcion: INSTALLED APPS, y añadimos esto: 'task'
Nota: saldran algunas dependencias/librerias con warnings amarillos, no pasa nada, solo ignoralos.

**Primeros pasos de la pagina web**
nos dirigimos a la carpeta task, ahi dentro creamos otra carpeta llamada: Templates.
dentro de la carpeta Templates creado un archivo llamado signup.html
En el archivo settings.py de tu proyecto Django, asegúrate de que la siguiente línea esté presente en la sección INSTALLED_APPS: 'django.contrib.auth',
en el archivo signup.html agregamos lo que actualmente contiene ese archivo y lo mismo para el views.py
añadimos en el urls.py la siguiente linea: path('signup/', views.helloworld)
y de esa manera queda realizado el formulario de registro a usuarios.

**Segundos pasos de la pagina web**
nos dirigimos a la carpeta task, de ahi a la carpeta Templates, ahi creamos el archivo home.html
en views.py cambiamos el nombre de la funcion de helloworld por home.
ahora se crean dos links: http://127.0.0.1:8000/signup/  y: http://127.0.0.1:8000/

ejecutamos el comando: python manage.py migrate ,esto creara la datatable de usuario en SQLite(despues vemos y la seguimos usando o migramos a SQLserver o postgree)
deberian de salir en la terminal mmuchos mensajes con un OK al final de color verde.
